#!/bin/bash
# Script to install chaincode onto a peer node
export CORE_PEER_TLS_ROOTCERT_FILE=/vars/keyfiles/peerOrganizations/{{ installpeer.org }}/peers/{{ installpeer.fullname }}/tls/ca.crt
export CORE_PEER_TLS_KEY_FILE=/vars/keyfiles/peerOrganizations/{{ installpeer.org }}/peers/{{ installpeer.fullname }}/tls/server.key
export CORE_PEER_LOCALMSPID={{ installpeer.org.split('.')|join('') }}
export CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
export CORE_PEER_TLS_CERT_FILE=/vars/keyfiles/peerOrganizations/{{ installpeer.org }}/peers/{{ installpeer.fullname }}/tls/server.crt
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_MSPCONFIGPATH=/vars/keyfiles/peerOrganizations/{{ installpeer.org }}/users/Admin@{{ installpeer.org }}/msp
export CORE_PEER_ID=cli
export CORE_PEER_ADDRESS={{ installpeer.fullname }}:7051

{% if CC_LANGUAGE == 'go' %}
cd /opt/gopath/src/github.com/chaincode/{{ CC_NAME }}
if [ -f 'go/go.mod' ] && [ ! -d 'go/vendor' ]; then
  cd go
  export GO111MODULE=on
{% if fabric.release is version('1.4.3','<=') and fabric.release != '1.4' %}
  export GOCACHE=on
{% endif %}
  go mod vendor
  cd -
fi
peer chaincode install --tls -l golang -v {{ CC_VERSION }} -n {{ CC_NAME }} \
  -p github.com/chaincode/{{ CC_NAME }}/go
{% elif CC_LANGUAGE == 'node' %}
peer chaincode install --tls -l node -v {{ CC_VERSION }} -n {{ CC_NAME }} \
  -p /opt/gopath/src/github.com/chaincode/{{ CC_NAME }}/node
{% elif CC_LANGUAGE == 'java' %}
peer chaincode install --tls -l java -v {{ CC_VERSION }} -n {{ CC_NAME }} \
  -p /opt/gopath/src/github.com/chaincode/{{ CC_NAME }}/java
{% endif %}
