{
  "name": "fabric-network",
  "description": "Generated network configuration file",
  "version": "0.1",
  "client": {
{% set pypeer=allpeers|random %}
    "organization": "{{ pypeer.org }}",
    "credentialStore": {
      "path": "/tmp/hfc-kvs",
      "cryptoStore": {
        "path": "/tmp/hfc-cvs"
      },
      "wallet": "wallet-name"
    }
  },
  "organizations": {
{% for org in allorgs %}
{%  set orgelements = allkeys.values() | selectattr("org", "equalto", org) | list %}
    "{{org}}": {
      "mspid": "{{ org.split('.')|join('') }}",
{%      set peers = allpeers | selectattr("org", "equalto", org) | list | sort(attribute='fullname') %}
{%      if peers is defined and (peers|length) > 0 %}
      "peers": [
{%      for peer in peers %}
        "{{peer.fullname}}"{{ '' if loop.last else ',' }}
{%      endfor %}
      ],
{%      endif %}
{%      set orderers = allorderers | selectattr("org", "equalto", org) | list | sort(attribute='fullname') %}
{%      if orderers is defined and (orderers|length) > 0 %}
      "orderers": [
{%        for orderer in orderers %}
        "{{orderer.fullname}}"{{ '' if loop.last else ',' }}
{%        endfor %}
      ],
{%      endif %}
      "users": {
{%      set users = orgelements | selectattr("type", "equalto", "users") | list | sort(attribute='key') %}
{%      for user in users %}
        "{{user.key.split('@')[0]}}": {
          "cert": "/{{ user.pkey.split('/')[0:6]|join('/') }}/signcerts/{{user.key}}-cert.pem",
          "private_key": "/{{ user.pkey }}"
        }{{ '' if loop.last else ',' }}
{%      endfor %}
      }
    }{{ '' if loop.last else ',' }}
{% endfor %}
  },
{%  set items = allkeys.values() | selectattr("type", "equalto", "orderers") | list | sort(attribute='key') %}
{% if items|length >0 %}
  "orderers": {
{%   for item in items %}
    "{{item.key}}": {
{%     if EXPOSE_ENDPOINTS=='true' %}
      "url": "{{ ADDRS.split(',')[0] }}:{{ nodeports[item.key+'_7050'] }}",
{%     else %}
      "url": "{{ item.key}}:7050",
{%     endif %}
      "grpcOptions": {
        "grpc.ssl_target_name_override": "{{ item.key }}",
        "grpc-max-send-message-length": 15
      },
      "tlsCACerts": {
        "path": "/keyfiles/ordererOrganizations/{{ item.org }}/orderers/{{ item.key }}/tls/ca.crt"
      }
    }{{ '' if loop.last else ',' }}
{%   endfor %}
  },
{% endif %}
{%  set items = allkeys.values() | selectattr("type", "equalto", "peers") | list %}
{% if items|length >0 %}
  "peers": {
{%   for item in items %}
    "{{item.key}}": {
{%     if EXPOSE_ENDPOINTS=='true' %}
      "url": "{{ ADDRS.split(',')[0] }}:{{ nodeports[item.key+'_7051'] }}",
{%     else %}
      "url": "{{ item.key}}:7051",
{%     endif %}
      "grpcOptions": {
        "grpc.ssl_target_name_override": "{{ item.key }}",
        "grpc-max-send-message-length": 15
      },
      "tlsCACerts": {
        "path": "/keyfiles/peerOrganizations/{{ item.org }}/peers/{{ item.key }}/tls/ca.crt"
      }
    }{{ '' if loop.last else ',' }}
{%   endfor %}
  },
{% endif %}
  "certificateAuthorities": {
{% for ca in allcas %}
    "{{ ca.fullname }}": {
      "url": "https://{{ ca.fullname }}:7054",
      "tlsCACerts": {
{% if ca.org in peerorgs %}
        "path": "{{ '/keyfiles/peerOrganizations/'+ca.org+'/ca/'+ca.fullname+'-cert.pem' }}"
{% else %}
        "path": "{{ '/keyfiles/ordererOrganizations/'+ca.org+'/ca/'+ca.fullname+'-cert.pem' }}"
{% endif %}
      },
      "httpOptions": { "verify": "false" },
      "caName": "{{ ca.name }}",
      "registrar": { "enrollId": "admin", "enrollSecret": "adminpw"}
    }{{ '' if loop.last else ',' }}
{% endfor %}
  }
}
