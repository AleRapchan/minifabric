---
- stat:
    path: "{{ pjroot }}/vars/keyfiles"
  register: certsexists

- name: "Create certs and block artifacts"
  include_tasks: "createcerts.yaml"
  when: certsexists.stat.exists == false or regcerts == "true"

- name: Find all user and node private keys
  find:
    paths: "{{ pjroot }}/vars/keyfiles"
    patterns: '*_sk'
    recurse: yes
    file_type: file
  register: privatekeys

- name: Set all user, peer and orderer keys
  set_fact:
    allkeys: >-
      {{ allkeys | default({}) |
        combine({ item.path.split('/')[-4]: {'pkey':item.path.split('/')[-8:]|join('/'),
        'path':item.path, 'key':item.path.split('/')[-4],
        'org':item.path.split('/')[-6], 'type':item.path.split('/')[-5] }}) }}
  when: item.path.find('/peers/') > 0 or item.path.find('/users/') >0 or item.path.find('/orderers/') > 0
  with_items: "{{ privatekeys.files }}"
  no_log: yes

- name: Add ca keys
  set_fact:
    allkeys: >-
      {{ allkeys | default({}) |
        combine({ item.path.split('/')[-3]: {'pkey':item.path.split('/')[-5:]|join('/'),
        'path':item.path, 'key':item.path.split('/')[-3],
        'org':item.path.split('/')[-3], 'type':item.path.split('/')[-2] }}) }}
  when: item.path.find('/ca/') > 0
  with_items: "{{ privatekeys.files }}"
  no_log: yes

- name: Add ca tls keys
  set_fact:
    allkeys: >-
      {{ allkeys | default({}) |
        combine({ item.path.split('/')[-3]+'.tlsca': {'pkey':item.path.split('/')[-5:]|join('/'),
        'path':item.path, 'key':item.path.split('/')[-3],
        'org':item.path.split('/')[-3], 'type':item.path.split('/')[-2] }}) }}
  when: item.path.find('/tlsca/') > 0
  with_items: "{{ privatekeys.files }}"
  no_log: yes
