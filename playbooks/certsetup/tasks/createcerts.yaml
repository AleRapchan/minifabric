---
- name: Ensure certificate directory is clean
  file:
    path: "{{ pjroot }}/vars/keyfiles"
    state: "{{ item }}"
  with_items:
    - "absent"
    - "directory"

- name: Create crypto-config file
  template:
    src: "{{ pjroot }}/playbooks/certsetup/templates/crypto-config.j2"
    dest: "{{ pjroot }}/vars/crypto-config.yaml"

- name: Create config tx file
  template:
    src: "{{ pjroot }}/playbooks/certsetup/templates/configtx.j2"
    dest: "{{ pjroot }}/vars/configtx.yaml"

- name: Create certs and channel artifacts script
  template:
    src: "{{ pjroot }}/playbooks/certsetup/templates/certtxgen.j2"
    dest: "{{ pjroot }}/vars/run/certtxgen.sh"
    mode: +x

- name: Use fabric tools container to create channel artifacts
  command: >-
    docker run --rm --name tools
    -v /var/run/:/host/var/run
    -v {{ hostroot}}/vars:/etc/hyperledger/fabric
    hyperledger/fabric-tools:{{ fabric.release }} /etc/hyperledger/fabric/run/certtxgen.sh

- name: Rename orderer ca private key
  shell: >-
    ls *_sk|cat -n|while read n f; do mv "$f" "ca_private.key"; done
  args:
    chdir: "{{ pjroot }}/vars/keyfiles/ordererOrganizations/{{ item }}/ca"
  with_items: "{{ ordererorgs }}"

- name: Rename peer ca private key
  shell: >-
    ls *_sk|cat -n|while read n f; do mv "$f" "ca_private.key"; done
  args:
    chdir: "{{ pjroot }}/vars/keyfiles/peerOrganizations/{{ item }}/ca"
  with_items: "{{ peerorgs }}"

- name: Rename orderer ca tls private key
  shell: >-
    ls *_sk|cat -n|while read n f; do mv "$f" "tlsca_private.key"; done
  args:
    chdir: "{{ pjroot }}/vars/keyfiles/ordererOrganizations/{{ item }}/tlsca"
  with_items: "{{ ordererorgs }}"

- name: Rename peer ca tls private key
  shell: >-
    ls *_sk|cat -n|while read n f; do mv "$f" "tlsca_private.key"; done
  args:
    chdir: "{{ pjroot }}/vars/keyfiles/peerOrganizations/{{ item }}/tlsca"
  with_items: "{{ peerorgs }}"
