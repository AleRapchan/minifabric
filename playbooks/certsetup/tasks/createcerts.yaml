---
- name: Ensure certificate directory is clean
  file:
    path: "{{ pjroot }}/vars/keyfiles"
    state: "{{ item }}"
  with_items:
    - "absent"
    - "directory"

- name: Create crypto-config file
  template:
    src: "{{ pjroot }}/playbooks/certsetup/templates/crypto-config.j2"
    dest: "{{ pjroot }}/vars/crypto-config.yaml"

- name: Set effecctive release
  set_fact:
    truerelease: "{{ (fabric.release == '1.4') | ternary('1.4.4', fabric.release) }}"

- name: Create config tx file
  template:
    src: "{{ pjroot }}/playbooks/certsetup/templates/configtx.j2"
    dest: "{{ pjroot }}/vars/configtx.yaml"

- name: Create all peer org mspid list
  set_fact:
    peerorgmsplist: >-
      {{ peerorgmsplist|default('') + '"' + (item.split('.')|join('')) + '" ' }}
  with_items: "{{ peerorgs }}"

- name: Create certs and channel artifacts script
  template:
    src: "{{ pjroot }}/playbooks/certsetup/templates/certtxgen.j2"
    dest: "{{ pjroot }}/vars/run/certtxgen.sh"
    mode: +x

- name: Use fabric tools container to create channel artifacts
  command: >-
    docker run --rm --name tools
    -v /var/run/:/host/var/run
    -v {{ hostroot}}/vars:/etc/hyperledger/fabric
    hyperledger/fabric-tools:{{ fabric.release }} /etc/hyperledger/fabric/run/certtxgen.sh
