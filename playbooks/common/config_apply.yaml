---
- name: Set fabric.release based on the passed in parameter
  set_fact:
    fabric: "{{ fabric | combine({'release': (IMAGETAG|default('1.4.4')) + ''}) }}"
    allcas: "{{ [] }}"
    allpeers: "{{ [] }}"
    allorderers: "{{ [] }}"

- name: Make sure that working directory exists
  file:
    path: "{{ pjroot }}/vars/run"
    state: "directory"
    mode: 0775

- name: Get all ca object list
  set_fact:
    allcas: |
      {{ allcas + [{ 'org':item.split('.')[1:] | join("."),
        'name':item.split('.')[0], 'fullname': item, 'type': 'ca' }] }}
  with_items: "{{ fabric.cas }}"
  when: fabric.cas is defined

- name: Get all peer object list
  set_fact:
    allpeers: |
      {{ allpeers + [{'org':item.split('.')[1:] | join("."),
        'name':item.split('.')[0], 'fullname': item, 'type': 'peer' }] }}
  with_items: "{{ fabric.peers }}"
  when: fabric.peers is defined

- name: Get all orderer object list
  set_fact:
    allorderers: |
      {{ allorderers + [{ 'org':item.split('.')[1:] | join("."),
        'name':item.split('.')[0], 'fullname': item, 'type': 'orderer' }] }}
  with_items: "{{ fabric.orderers }}"
  when: fabric.orderers is defined

- name: Fix possible misconfiguration issues
  set_fact:
    allcas: "{{ allcas | rejectattr('fullname', 'equalto', '') | list }}"
    allpeers: "{{ allpeers | rejectattr('fullname', 'equalto', '') | list }}"
    allorderers: "{{ allorderers | rejectattr('fullname', 'equalto', '') | list }}"

- name: Get ca, peer and orderer orgs
  set_fact:
    caorgs: "{{ allcas | default([]) | map(attribute='org') | list  | unique | sort }}"
    peerorgs: "{{ allpeers | default([]) | map(attribute='org') | list  | unique | sort }}"
    ordererorgs: "{{ allorderers | default([]) | map(attribute='org') | list  | unique | sort }}"

- name: Get all peers for each peer org
  set_fact:
    orgpeers: >-
      {{ orgpeers | default({}) | combine({
        item: allpeers|selectattr('org','equalto',item)|map(attribute='fullname')|list}) }}
  with_items: "{{ peerorgs }}"

- name: Create all orgs list
  set_fact:
    allorgs: "{{ (caorgs + peerorgs + ordererorgs) | sort | unique }}"
